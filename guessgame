{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2c3a0f34",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Let me think of a number 1 to 40\n",
      "Choose the level... 'easy' or 'hard': easy\n",
      "You have 10 remaining to guess the number\n",
      "Guess a number:25\n",
      "Your Guess is too low\n",
      "Guess again\n",
      "You have 9 remaining to guess the number\n",
      "Guess a number:30\n",
      "Your Guess is too low\n",
      "Guess again\n",
      "You have 8 remaining to guess the number\n",
      "Guess a number:40\n",
      "Your Guess is too high\n",
      "Guess again\n",
      "You have 7 remaining to guess the number\n",
      "Guess a number:35\n",
      "Your Guess is too low\n",
      "Guess again\n",
      "You have 6 remaining to guess the number\n",
      "Guess a number:37\n",
      "Your Guess is too low\n",
      "Guess again\n",
      "You have 5 remaining to guess the number\n",
      "Guess a number:38\n",
      "Your Guess is too low\n",
      "Guess again\n",
      "You have 4 remaining to guess the number\n",
      "Guess a number:39\n",
      "Your guess is right... The answer was 39\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "easy_level_attempts=10\n",
    "hard_level_attempts=5\n",
    "print(\"Let me think of a number 1 to 40\") \n",
    "def level_typ(level_chosen):\n",
    "    if level_chosen=='easy':\n",
    "        return easy_level_attempts\n",
    "    else:\n",
    "        return hard_level_attempts\n",
    "def check_answer(guessed_num,answer,attempts):\n",
    "    if guessed_num < answer:\n",
    "        print(\"Your Guess is too low\")\n",
    "        return attempts-1\n",
    "    elif guessed_num > answer:\n",
    "        print(\"Your Guess is too high\")\n",
    "        return attempts-1\n",
    "    else:\n",
    "        print(f\"Your guess is right... The answer was {answer}\")\n",
    "   \n",
    "\n",
    "def game():        \n",
    "        \n",
    "    \n",
    "    level=input(\"Choose the level... 'easy' or 'hard': \")\n",
    "    \n",
    "    answer=random.randint(1,40)\n",
    "#     print(answer)\n",
    "    \n",
    "    attempts=level_typ(level)\n",
    "    guessed_num=0\n",
    "    while guessed_num!=answer:\n",
    "    \n",
    "        print(f\"You have {attempts} remaining to guess the number\")\n",
    "        guessed_num=int(input(\"Guess a number:\"))\n",
    "        attempts=check_answer(guessed_num,answer,attempts)\n",
    "        if attempts==0:\n",
    "            print(\"You are out of guesses... You lose!\")\n",
    "            return\n",
    "    \n",
    "        elif guessed_num!=answer:\n",
    "            print(\"Guess again\")\n",
    "\n",
    "game()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d8ed1a67",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
